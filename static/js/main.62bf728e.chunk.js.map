{"version":3,"sources":["Card.js","CardDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["SingleCard","styled","div","props","rotate","zIndex","Card","this","img","val","suit","alt","src","Component","Button","button","Alert","Wrapper","CardDisplay","API_URL","randomNumber","min","max","Math","floor","random","state","deckId","cardsRemaining","undefined","cardPile","handleClick","bind","a","axios","get","response","resData","data","setState","deck_id","remaining","console","error","message","window","location","reload","cardInfo","cards","st","card","createCard","addCardToPile","rotateDeg","image","value","map","c","uuidv4","className","onClick","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62bf728e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst SingleCard = styled.div`\n  transform: rotate(${(props) => props.rotate || \"0deg\"});\n  z-index: ${(props) => props.zIndex || \"0\"};\n  position: absolute;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default class Card extends Component {\n  render() {\n    const { img, val, suit, zIndex, rotate } = this.props;\n    return (\n      <SingleCard rotate={rotate} zIndex={zIndex}>\n        {img === \"\" ? null : <img alt={`${val} of ${suit}`} src={img} />}\n      </SingleCard>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport styled from \"styled-components/macro\";\nimport Card from \"./Card\";\n\nconst Button = styled.button`\n  background-color: rgba(0, 0, 0, 0.9);\n  color: rgb(255, 255, 255);\n  margin-bottom: 5rem;\n  padding: 0.8rem 2rem;\n  border-radius: 5%;\n  border: 0;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgba(0, 0, 0, 0.6);\n    box-shadow: 0px 0px 16px 1px rgba(255, 255, 255, 0.3);\n    -webkit-box-shadow: 0px 0px 16px 1px rgba(255, 255, 255, 0.3);\n    -moz-box-shadow: 0px 0px 16px 1px rgba(255, 255, 255, 0.3);\n  }\n`;\n\nconst Alert = styled.div`\n  color: red;\n  background-color: rgba(255, 0, 0, 0.5);\n  border-radius: 5px;\n  font-weight: bold;\n  width: 75%;\n  padding: 1.5rem;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: -3rem;\n  margin-bottom: 2rem;\n  width: 100%;\n`;\n\nexport default class CardDisplay extends Component {\n  API_URL = \"https://deckofcardsapi.com/api/deck\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      deckId: \"\",\n      cardsRemaining: undefined,\n      zIndex: 0,\n      cardPile: [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(`${this.API_URL}/new/shuffle`);\n      const resData = response.data;\n      this.setState({\n        deckId: resData.deck_id,\n        cardsRemaining: resData.remaining,\n      });\n    } catch (e) {\n      // TODO: Display a msg on screen\n      console.error(e.message);\n      return;\n    }\n  }\n\n  async handleClick() {\n    //TODO: Change to remove alert\n    if (this.state.cardsRemaining <= 0) window.location.reload();\n\n    try {\n      const response = await axios.get(\n        `${this.API_URL}/${this.state.deckId}/draw`\n      );\n      const resData = response.data;\n      const cardInfo = resData.cards[0];\n\n      this.setState((st) => ({\n        cardsRemaining: resData.remaining,\n        zIndex: st.zIndex + 1,\n      }));\n\n      const card = this.createCard(cardInfo);\n      this.addCardToPile(card);\n    } catch (e) {\n      // TODO: Display a msg on screen\n      console.error(e.message);\n      return;\n    }\n  }\n\n  createCard(cardInfo) {\n    const rotateDeg = this.randomNumber(-45, 45);\n\n    const card = {\n      img: cardInfo.image,\n      val: cardInfo.value,\n      suit: cardInfo.suit,\n      rotate: `${rotateDeg}deg`,\n      zIndex: this.state.zIndex,\n    };\n\n    return card;\n  }\n\n  addCardToPile({ img, val, suit, rotate, zIndex }) {\n    this.setState((st) => ({\n      cardPile: [...st.cardPile, { img, val, suit, rotate, zIndex }],\n    }));\n  }\n\n  randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min) + min);\n  };\n\n  render() {\n    const { cardPile, cardsRemaining } = this.state;\n    const cards = cardPile.map((c) => (\n      <Card\n        img={c.img}\n        val={c.val}\n        suit={c.suit}\n        rotate={c.rotate}\n        zIndex={c.zIndex}\n        key={uuidv4()}\n      ></Card>\n    ));\n    return (\n      <div className=\"CardDisplay\">\n        {cardsRemaining <= 0 ? (\n          <Wrapper>\n            <Alert>You're all out of cards!</Alert>\n          </Wrapper>\n        ) : null}\n\n        <Button onClick={this.handleClick}>\n          {cardsRemaining > 0 ? \"HIT ME!\" : \"RESET\"}\n        </Button>\n        {cards}\n      </div>\n    );\n  }\n}\n","import CardDisplay from \"./CardDisplay\";\nimport { createGlobalStyle } from \"styled-components/macro\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    box-sizing: border-box;\n    margin: 0;\n    min-height: 100vh;\n    padding: 5rem 0;\n    background-color: #064919;\n    font-family: \"Roboto\", sans-serif;\n    text-align: center;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <CardDisplay></CardDisplay>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}